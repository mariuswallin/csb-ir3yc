{"version":3,"sources":["components/UpdateArrayOne.js","components/UpdateArrayTwo.js","components/UpdateObject.js","App.js","index.js"],"names":["UpdateArrayOne","useState","list","setList","text","setText","JSON","stringify","onSubmit","event","preventDefault","prev","htmlFor","id","value","onChange","target","type","UpdateArrayTwo","age","setAge","data","UpdateObject","obj","setObj","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+NA8BeA,EA5BQ,WACrB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KASA,OACE,oCACE,wDACA,uCAAUC,KAAKC,UAAUL,MACzB,uBAAMM,SAXW,SAACC,GACpBA,EAAMC,iBAGNP,GAAQ,SAACQ,GAAD,4BAAcA,GAAd,CAAoBP,QAO1B,UACE,uBAAOQ,QAAQ,OAAf,sBACA,uBACEC,GAAG,OACHC,MAAOV,EACPW,SAAU,SAACN,GAAD,OAAWJ,EAAQI,EAAMO,OAAOF,UAE5C,wBAAQG,KAAK,SAAb,wBCcOC,EApCQ,WACrB,MAAwBjB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOkB,EAAP,KAAYC,EAAZ,KAUA,OACE,oCACE,wDACA,uCAAUd,KAAKC,UAAUL,MACzB,uBAAMM,SAZW,SAACC,GACpB,IAAMY,EAAO,CAAEjB,OAAMe,OACrBV,EAAMC,iBAGNP,GAAQ,SAACQ,GAAD,4BAAcA,GAAd,CAAoBU,QAO1B,UACE,uBAAOT,QAAQ,OAAf,sBACA,uBACEC,GAAG,OACHC,MAAOV,EACPW,SAAU,SAACN,GAAD,OAAWJ,EAAQI,EAAMO,OAAOF,UAE5C,uBAAOF,QAAQ,MAAf,qBACA,uBACEC,GAAG,MACHC,MAAOK,EACPJ,SAAU,SAACN,GAAD,OAAWW,EAAOX,EAAMO,OAAOF,UAE3C,wBAAQG,KAAK,SAAb,wB,OCKOK,EAnCM,WACnB,MAAsBrB,mBAAS,CAAEG,KAAM,GAAIe,IAAK,IAAhD,mBAAOI,EAAP,KAAYC,EAAZ,KACA,EAAwBvB,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOkB,EAAP,KAAYC,EAAZ,KASA,OACE,oCACE,qDACA,sCAASd,KAAKC,UAAUgB,MACxB,uBAAMf,SAXW,SAACC,GACpBA,EAAMC,iBAGNc,GAAO,SAACb,GAAD,mBAAC,eAAeA,GAAhB,IAAsBP,OAAMe,YAOjC,UACE,uBAAOP,QAAQ,OAAf,sBACA,uBACEC,GAAG,OACHC,MAAOV,EACPW,SAAU,SAACN,GAAD,OAAWJ,EAAQI,EAAMO,OAAOF,UAE5C,uBAAOF,QAAQ,MAAf,qBACA,uBACEC,GAAG,MACHC,MAAOK,EACPJ,SAAU,SAACN,GAAD,OAAWW,EAAOX,EAAMO,OAAOF,UAE3C,wBAAQG,KAAK,SAAb,wB,MC1BO,SAASQ,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OCLN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,K","file":"static/js/main.9554070d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst UpdateArrayOne = () => {\n  const [list, setList] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // take old state (prev) then spread it out into a new array\n    // then add new string\n    setList((prev) => [...prev, text]);\n  };\n\n  return (\n    <section>\n      <h2>Update array state one</h2>\n      <p>List: {JSON.stringify(list)}</p>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"text\">Add text</label>\n        <input\n          id=\"text\"\n          value={text}\n          onChange={(event) => setText(event.target.value)}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </section>\n  );\n};\n\nexport default UpdateArrayOne;\n","import { useState } from \"react\";\n\nconst UpdateArrayTwo = () => {\n  const [list, setList] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [age, setAge] = useState(0);\n\n  const handleSubmit = (event) => {\n    const data = { text, age };\n    event.preventDefault();\n    // take old state (prev) then spread it out into a new array\n    // then add new object (data)\n    setList((prev) => [...prev, data]);\n  };\n\n  return (\n    <section>\n      <h2>Update array state two</h2>\n      <p>List: {JSON.stringify(list)}</p>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"text\">Add text</label>\n        <input\n          id=\"text\"\n          value={text}\n          onChange={(event) => setText(event.target.value)}\n        />\n        <label htmlFor=\"age\">Add age</label>\n        <input\n          id=\"age\"\n          value={age}\n          onChange={(event) => setAge(event.target.value)}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </section>\n  );\n};\n\nexport default UpdateArrayTwo;\n","import { useState } from \"react\";\n\nconst UpdateObject = () => {\n  const [obj, setObj] = useState({ text: \"\", age: 0 });\n  const [text, setText] = useState(\"\");\n  const [age, setAge] = useState(0);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // take old state (prev) then spread it out into a new object\n    // then update text or age value\n    setObj((prev) => ({ ...prev, text, age }));\n  };\n\n  return (\n    <section>\n      <h2>Update object state</h2>\n      <p>Obj: {JSON.stringify(obj)}</p>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"text\">Add text</label>\n        <input\n          id=\"text\"\n          value={text}\n          onChange={(event) => setText(event.target.value)}\n        />\n        <label htmlFor=\"age\">Add age</label>\n        <input\n          id=\"age\"\n          value={age}\n          onChange={(event) => setAge(event.target.value)}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </section>\n  );\n};\n\nexport default UpdateObject;\n","import UpdateArrayOne from \"./components/UpdateArrayOne\";\nimport UpdateArrayTwo from \"./components/UpdateArrayTwo\";\nimport UpdateObject from \"./components/UpdateObject\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <UpdateObject />\n      <UpdateArrayOne />\n      <UpdateArrayTwo />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}